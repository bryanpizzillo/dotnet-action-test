name: Main workflow
on:
  ## This tries to avoid unessesary pushes to forked repo
  ## development branches. No sense in a dev building every
  ## time they push for a PR and no one should be working on
  ## common branches in their fork.
  push:
jobs:
  test_build_release:
    runs-on: ubuntu-latest
    name: Build and Release
    steps:
      - uses: actions/checkout@master
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.607'
      - name: Build with dotnet
        run: dotnet build --configuration Release /WarnAsError
      - name: Publish
        run: dotnet publish -c Release -o $GITHUB_WORKSPACE/out
        shell: bash
      - name: Upload Published Artifact
        uses: actions/upload-artifact@v1
        with:
          name: the-app-ubuntu-latest
          path: out
  integration_tests:
    name: integration
    runs-on: ubuntu-latest
    needs: test_build_release
    steps:
      - uses: actions/checkout@master
      - name: Download Published Artifact
        uses: actions/download-artifact@v1
        with:
          name: the-app-ubuntu-latest
          path: built-api
        ## using latest LTS releases - also it MUST be the SDK version,
        ## which have stupidly high numbers for the patch version.
        ## '3.1.100' breaks our app, so let's just use 2.x
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.607'
      - name: Start up api
        env:
          API_URL: http://localhost:5000/api/values
          SLEEP_TIMEOUT: 5
          WAIT_DURATION: 120
        run: |
              ## Start the app
              dotnet ./built-api/dotnet-action-test.dll 2>&1 &

              time_waited=1
              echo "Checking status of ${API_URL}."
              until $(curl --output /dev/null --silent --fail ${API_URL}); do
                echo $?

                if [ $time_waited -ge $WAIT_DURATION ]; then
                    echo "Waited past duration. Exiting"
                    exit 0
                fi

                sleep $SLEEP_TIMEOUT
                time_waited=$((time_waited + SLEEP_TIMEOUT))
              done

              echo "API is up"
# dotnet-action-test.dll